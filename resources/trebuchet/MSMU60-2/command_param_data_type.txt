bufferVar.appendmode
state: 0|1

bufferVar.basetimestamp
basetime: number

bufferVar.cachemode
cacheMode: 0|1

bufferVar.capacity
bufferCapacity: integer
bufferVar: bufferVar

bufferVar.clear()
bufferVar: bufferVar


bufferVar.clearcache()
bufferVar: bufferVar

bufferVar.collectsourcevalues
state: 0|1

bufferVar.collecttimestamps
state: 0|1

bufferVar.fillcount
fillCount: integer


bufferVar.fillmode
fillMode: bufferVarfillmodefillMode
bufferVar: bufferVar

bufferVar.measurefunctions
measurefunction: string[]
bufferVar: bufferVar

bufferVar.measureranges
measurerange: number[]

bufferVar.n 
numberOfReadings: integer
bufferVar: bufferVar

bufferVar.readings
reading: number[]
bufferVar: bufferVar
N: number

bufferVar.sourcefunctions
sourcefunction: string[]
bufferVar: bufferVar

bufferVar.sourceoutputstates
state: string[]
bufferVar: bufferVar

bufferVar.sourceranges
sourcerange: number[]
bufferVar: bufferVar

bufferVar.sourcevalues
sourcevalue: number[]
bufferVar: bufferVar

bufferVar.statuses
statusInformation: number[]

bufferVar.timestampresolution
resolution: number

bufferVar.timestamps
timestamp: number[]
bufferVar: bufferVar

firmware.update()

firmware.verify()

smu[X].abort()

smu[X].configlist.create()

smu[X].configlist.delete()

smu[X].configlist.query()

smu[X].configlist.recall()

smu[X].configlist.size()

smu[X].configlist.store()

smu[X].configlist.table()

smu[X].contact.calibratehi()

smu[X].contact.calibratelo()

smu[X].contact.check()

smu[X].contact.r()

smu[X].contact.speed

smu[X].contact.threshold

smu[X].defbufferY

smu[X].guard.v()

smu[X].makebuffer()

smu[X].measure.aperture

smu[X].measure.autodelay

smu[X].measure.autorangeY

smu[X].measure.count

smu[X].measure.delay

smu[X].measure.interval

smu[X].measure.lowrangeY

smu[X].measure.nplc

smu[X].measure.overlappedY()

smu[X].measure.rangeY

smu[X].measure.rate

smu[X].measure.rel.enableY

smu[X].measure.rel.levelY

smu[X].measure.tempcomp

smu[X].measure.Y()

smu[X].overlapped

smu[X].reset()

smu[X].sense

smu[X].source.atlimit

smu[X].source.autodelay

smu[X].source.autorangeY

smu[X].source.constantcurrent

smu[X].source.delay

smu[X].source.func

smu[X].source.levelY

smu[X].source.limitnY

smu[X].source.limitpY

smu[X].source.limitY

smu[X].source.lowrangeY

smu[X].source.offfunc

smu[X].source.offlimitnY

smu[X].source.offlimitpY

smu[X].source.offlimitY

smu[X].source.offmode

smu[X].source.output

smu[X].source.rangeY

smu[X].trigger.measureY()

smu[X].trigger.source.linearY()

smu[X].trigger.source.listY()

smu[X].trigger.source.logY()

trigger.model.abort()

trigger.model.addblock.branch.always()

trigger.model.addblock.branch.counter()

trigger.model.addblock.branch.event()

trigger.model.addblock.branch.once()

trigger.model.addblock.branchonceexcluded()

trigger.model.addblock.reset.branch.counter()

trigger.model.addblock.configlist.next()

trigger.model.addblock.configlist.prev()

trigger.model.addblock.configlist.recall()

trigger.model.addblock.delay.constant()

trigger.model.addblock.logevent()

trigger.model.addblock.measure()

trigger.model.addblock.measureoverlapped()

trigger.model.addblock.nop()

trigger.model.addblock.notify()

trigger.model.addblock.source.action.bias()

trigger.model.addblock.source.action.skip()

trigger.model.addblock.source.action.step()

trigger.model.addblock.source.output()

trigger.model.addblock.wait()

trigger.model.create()

trigger.model.delete()

trigger.model.initiate()

trigger.model.removeblock()

trigger.model.state()
